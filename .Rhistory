errflag = errflag+1
} else {
errorLog[errflag, 1] = attachList[comment, "documentId"]
errorLog[errflag, 2] = error = test$status_code
errflag = errflag+1
}
}
}
nrow(attachList)
attachExtract <- read_excel("Data/CMS-2017-0156-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
comLoc <- "C:/Data/Comments/Testing"
comReport <- read_excel(paste0(comLoc, "/report.xlsx"), sheet = "Nonrulemaking-Public Submission")
colnames(comReport) <- make.names(colnames(comReport))
comReport$Site_Key <- substring(comReport$Email.Address, regexpr("@", comReport$Email.Address) + 1)
attReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = "Attachments")
colnames(attReport) <- make.names(colnames(attReport))
attachExtract <- read_excel("Data/CMS-2017-0156-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
View(comReport)
comLoc <- "C:/Data/Comments/Testing"
comReport <- read_excel(paste0(comLoc, "/report.xlsx"), sheet = "Nonrulemaking-Public Submission")
comReport <- read_excel(paste0(comLoc, "/report.xlsx"), sheet = 1)
comReport <- read_excel(paste0(comLoc, "/report.xlsx"), sheet = 1)
colnames(comReport) <- make.names(colnames(comReport))
comReport$Site_Key <- substring(comReport$Email.Address, regexpr("@", comReport$Email.Address) + 1)
attReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = 2)
colnames(attReport) <- make.names(colnames(attReport))
attachExtract <- read_excel("Data/CMS-2017-0156-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
commentsDf <- data.frame(doc_id = paste0(comments$documentId,"-0"), text = comments$commentText, stringsAsFactors = FALSE)
data(stop_words)
View(comments)
library(readxl)
comLoc <- "C:/Data/Comments/Testing"
comReport <- read_excel(paste0(comLoc, "/report.xlsx"), sheet = 1)
colnames(comReport) <- make.names(colnames(comReport))
?union
View(comments)
comments <- comments %>%
mutate(Comment.ID = paste0(documentid, "-0")) %>%
mutate(Document.ID = documentid) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
comments <- comments %>%
mutate(Comment.ID = paste0(documentId, "-0")) %>%
mutate(Document.ID = documentId) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
comments <- comments %>%
mutate(Document.ID = paste0(documentId, "-0")) %>%
mutate(Comment.ID = documentId) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
#Comment Dataset from Data_Download.R
comments <- read_csv("Data/comments.csv")
comments <- comments %>%
mutate(Document.ID = paste0(documentId, "-0")) %>%
mutate(Comment.ID = documentId) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
#Comment Dataset from Data_Download.R
comments <- read_csv("Data/comments.csv")
comments <- comments %>%
mutate(Document.ID = paste0(documentId, "-0")) %>%
mutate(Comment.ID = documentId) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document")) %>%
union(attachExtract)
#Comment Dataset from Data_Download.R
comments <- read_csv("Data/comments.csv")
#Text Extract of Comment Attachments
attachExtract <- read_excel("Data/CMS-2017-0156-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
########################
# Load Text Extract    #
########################
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
select(Comment.ID, Document.ID, text) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
View(attachList)
View(attachExtract)
########################
# Load Text Extract    #
########################
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
select(Comment.ID, Document.ID, Text) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
########################
# Load Text Extract    #
########################
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18),
Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
select(Comment.ID, Document.ID, Text) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
#Text Extract of Comment Attachments
attachExtract <- read_excel("Data/CMS-2017-0156-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
########################
# Load Text Extract    #
########################
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18),
Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
select(Comment.ID, Document.ID, Text) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
comments <- comments %>%
mutate(Document.ID = paste0(documentId, "-0"),
Comment.ID = documentId,
Text = commentText) %>%
select(Comment.ID, Document.ID, Text) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document")) %>%
union(attachExtract)
#Comment Dataset from Data_Download.R
comments <- read_csv("Data/comments.csv")
commentsDf <- comments %>%
mutate(Document.ID = paste0(documentId, "-0"),
Comment.ID = documentId,
Text = commentText) %>%
select(Comment.ID, Document.ID, Text) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document")) %>%
union(attachExtract)
View(commentsDf)
#Text Extract of Comment Attachments
attachExtract <- read_excel("Data/CMS-2017-0156-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
########################
# Load Text Extract    #
########################
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18),
Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1)) %>%
select(Comment.ID, Document.ID, Text, Page.Number) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document"))
commentsDf <- comments %>%
mutate(Document.ID = paste0(documentId, "-0"),
Comment.ID = documentId,
Text = commentText,
Page.Number = 1) %>%
select(Comment.ID, Document.ID, Text) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document")) %>%
union(attachExtract)
str(attachExtract)
commentsDf <- comments %>%
mutate(Document.ID = paste0(documentId, "-0"),
Comment.ID = documentId,
Text = commentText,
Page.Number = 1) %>%
select(Comment.ID, Document.ID, Text, Page.Number) %>%
left_join(comReport, by = c("Comment.ID" = "Document.ID")) %>%
left_join(map, by = c("Comment.ID" = "Document")) %>%
union(attachExtract)
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
library(tidyr)
data(stop_words)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
test <- commentsDf %>%
group_by(Document.ID) %>%
mutate(linenumber = row_number()) %>%
ungroup()
test1 <- test %>%
unnest_tokens(word, Text)
test1 <- test1 %>%
anti_join(stop_words)
cms_stop <- data.frame(word = c("cms","medicare","ma", "plan", "care", "beneficiaries", "advantage"), stringsAsFactors = FALSE)
test1 <- test1 %>%
anti_join(cms_stop)
test1 %>%
count(word, sort = TRUE) %>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
count(word, sort = TRUE) %>%
filter(n > 5000) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
cms_stop <- data.frame(word = c("cms","medicare","ma", "plan", "care", "beneficiaries", "advantage", "proposed", "rule"), stringsAsFactors = FALSE)
cms_stop <- data.frame(word = c("cms","medicare","ma", "plan", "care", "beneficiaries", "advantage", "proposed", "rule", "health", "plans"), stringsAsFactors = FALSE)
test1 <- test1 %>%
anti_join(cms_stop)
test1 %>%
count(word, sort = TRUE) %>%
filter(n > 5000) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
count(word, sort = TRUE) %>%
filter(n > 4000) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
test_sentiment <- test1 %>%
inner_join(get_sentiments("bing")) %>%
count(Document.ID, index = Page.Number %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
filter(abs(sentiment)>250)
ggplot(test_sentiment, aes(index, sentiment, fill = Document.ID)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Document.ID, ncol = 2, scales = "free_x")
test_sentiment <- test1 %>%
inner_join(get_sentiments("bing")) %>%
count(Document.ID, index = Page.Number %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
filter(abs(sentiment)>200)
ggplot(test_sentiment, aes(index, sentiment, fill = Document.ID)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Document.ID, ncol = 2, scales = "free_x")
test_sentiment <- test1 %>%
inner_join(get_sentiments("bing")) %>%
count(sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(test_sentiment, aes(index, sentiment)) +
geom_col(show.legend = FALSE)
library(janeaustenr)
library(stringr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
tidy_books <- original_books %>%
unnest_tokens(word, text)
tidy_books
tidy_books <- tidy_books %>%
anti_join(stop_words)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
test1 <- test %>%
unnest_tokens(word, text)
test1 <- test1 %>%
anti_join(stop_words)
library(dplyr)
tidy_books %>%
dplyr::count(word, sort = TRUE)
library(ggplot2)
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
library(tidyr)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(jane_austen_sentiment, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
View(jane_austen_sentiment)
test_sentiment <- test1 %>%
inner_join(get_sentiments("bing")) %>%
count(Document.ID, index = Page.Number %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
filter(abs(sentiment)>200)
ggplot(test_sentiment, aes(index, sentiment, fill = Document.ID)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Document.ID, ncol = 2, scales = "free_x")
ggplot(jane_austen_sentiment, aes(index, sentiment)) +
geom_col(show.legend = FALSE)
bing_word_counts <- test1 %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
?unnest_tokens
View(commentsDf)
View(test1)
summarise(n = n(word)) %>%
filter(n > 1000) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
summarise(n = n()) %>%
filter(n > 1000) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
summarise(n = n())
summarise(counts = n())
test2 <- test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(n > 1000) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
test2 <- test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(n > 1000) %>%
mutate(word = reorder(word, n))
?reorder
mutate(word = reorder(word, counts) %>%
test2 <- test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(n > 1000) %>%
mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, n)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
test2 <- test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 1000) %>%
mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, n)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
test2 <- test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 1000)
View(test2)
test2 <- test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 1000) %>%
mutate(word = reorder(word, counts))
test2 <- test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 1000) %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, n)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 1000) %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, n)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 1000) %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, n))
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 1000) %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, counts)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(counts > 500) %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, counts)) +
facet_wrap(~Type, ncol = 2, scales = "free_x") +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(Type = "Health Plan") %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, counts)) +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(Type == "Health Plan") %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, counts)) +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(Type == "Health Plan", counts > 200) %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, counts)) +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(Type == "Health Plan", counts > 250) %>%
#    mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, counts)) +
geom_col() +
xlab(NULL) +
coord_flip()
test1 %>%
group_by(Type, word) %>%
summarise(counts = n()) %>%
filter(Type == "Health Plan", counts > 250) %>%
mutate(word = reorder(word, counts)) %>%
ggplot(aes(word, counts)) +
geom_col() +
xlab(NULL) +
coord_flip()
