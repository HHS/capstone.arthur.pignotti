filter(WARD %in% c(6,7,8))
#D.6
early_close %>%
filter(ZIPCODE %in% C('20004','20006'))
#D.6
early_close %>%
filter(ZIPCODE %in% C(20004,20006))
View(early_close)
#D.6
early_close %>%
filter(ZIPCODE %in% C(20004,20006)) %>%
group_by(ZIPCODE) %>%
summarise(counts = n_distinct(WORKORDERID))
#D.6
early_close %>%
filter(ZIPCODE %in% c(20004,20006)) %>%
group_by(ZIPCODE) %>%
summarise(counts = n_distinct(WORKORDERID))
#D.6
zip_counts <- early_close %>%
filter(ZIPCODE %in% c(20004,20006)) %>%
group_by(ZIPCODE) %>%
summarise(counts = n_distinct(WORKORDERID))
View(zip_counts)
#G.1
coordinates <- service %>%
select(REQUESTID, XCOORD, YCOORD) %>%
filter(XCOORD != "", YCOORD != "") %>%
mutate(difference = abs(XCOORD-YCOORD))
View(coordinates)
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=1:5, labels=c("low","middle","high")))
?cut
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(1,3,5), labels=c("low","middle","high")))
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(1,2,3,4,5), labels=c("low","middle","high")))
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(1,3,3,5), labels=c("low","middle","high")))
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(1,2,4,5), labels=c("low","middle","high")))
head(select(service, PRIORITY, priority_range))
table(select(service, PRIORITY, priority_range))
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(1,2,3,5), labels=c("low","middle","high")))
table(select(service, PRIORITY, priority_range))
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(0,2,3,6), labels=c("low","middle","high")))
table(select(service, PRIORITY, priority_range))
#G.2
service <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(0,2,3,6), labels=c("low","middle","high"))) %>%
select(REQUESTID, PRIORITY, priority_range)
service <- read.csv("Service_Data_2018.csv")
#G.2
priority_sub <- service %>%
mutate(priority_range=cut(PRIORITY, breaks=c(0,2,3,6), labels=c("low","middle","high"))) %>%
select(REQUESTID, PRIORITY, priority_range)
inspect_clean <- service %>%
filter(INSPECTIONCOMPLETE != "")
#G.3
table(inspect_clean)
#G.3
table(inspect_clean$INSPECTIONCOMPLETE)
inspect_clean <- service %>%
filter(INSPECTIONCOMPLETE != "") %>%
transmute(INSPECTIONCOMPLETE = ifelse(INSPECTIONDATE == "Y", "Yes"), INSPECTIONCOMPLETE = ifelse(INSPECTIONDATE == "Y", "Yes"))
inspect_clean <- service %>%
filter(INSPECTIONCOMPLETE != "") %>%
transmute(INSPECTIONCOMPLETE = ifelse(INSPECTIONDATE == "Y", "Yes","No"))
#G.3
table(inspect_clean$INSPECTIONCOMPLETE)
#G.3
table(service$INSPECTIONCOMPLETE)
library(dbplyr)
library(dplyr)
inspect_clean <- service %>%
filter(INSPECTIONCOMPLETE != "") %>%
transmute(INSPECTIONCOMPLETE = translate_sql(if (INSPECTIONDATE == "Y") "Yes" else "No"))
#G.3
table(inspect_clean$INSPECTIONCOMPLETE)
inspect_clean <- service %>%
filter(INSPECTIONCOMPLETE != "") %>%
transmute(INSPECTIONCOMPLETE = ifelse(INSPECTIONDATE == "Y", "Yes", "No"))
#G.3
table(inspect_clean$INSPECTIONCOMPLETE)
inspect_clean <- service %>%
filter(INSPECTIONCOMPLETE != "") %>%
transmute(INSPECTIONCOMPLETE = ifelse(INSPECTIONCOMPLETE == "Y", "Yes", "No"))
#G.3
table(inspect_clean$INSPECTIONCOMPLETE)
#G.4
service_sub <- service %>%
select(REQUESTID, DAYSTOCLOSE) %>%
filter(DAYSTOCLOSE != "") %>%
mutate(YEAR = DAYSTOCLOSE % 365)
#G.4
service_sub <- service %>%
select(REQUESTID, DAYSTOCLOSE) %>%
filter(DAYSTOCLOSE != "") %>%
mutate(YEAR = DAYSTOCLOSE %% 365)
#G.4
service_sub <- service %>%
select(REQUESTID, DAYSTOCLOSE) %>%
filter(DAYSTOCLOSE != "") %>%
mutate(YEAR = floor(DAYSTOCLOSE/365),
MONTH = floor(DAYSTOCLOSE %% 365 %% 30),
DAY = DAYSTOCLOSE %% 365 %% 30)
head(service_sub)
#G.4
service_sub <- service %>%
select(REQUESTID, DAYSTOCLOSE) %>%
filter(DAYSTOCLOSE != "") %>%
mutate(YEAR = floor(DAYSTOCLOSE/365),
MONTH = floor(DAYSTOCLOSE %% 365 / 30),
DAY = DAYSTOCLOSE %% 365 %% 30)
head(service_sub)
head(filter(service_sub, DAYSTOCLOSE > 400))
head(filter(service_sub, DAYSTOCLOSE > 365))
#H.1
service %>%
group_by(REQUESTID) %>%
summarise(counts = n())
#H.1
byQuad <- service %>%
group_by(REQUESTID) %>%
summarise(counts = n())
View(byQuad)
#H.1
byQuad <- service %>%
group_by(QUADRANT) %>%
summarise(counts = n())
View(byQuad)
#H.1
byQuad <- service %>%
group_by(QUADRANT) %>%
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE))
View(byQuad)
#H.2
service %>%
summarise(meanDays = mean(DAYSTOCLOSE))
#H.3
byPriority <- service %>%
group_by(PRIORITY) %>%
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE))
View(byPriority)
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE))
#H.4
byCluster <- service %>%
filter(STATUS == "OPEN") %>%
group_by(NEIGHBORHOODCLUSTERS) %>%
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE))
View(byCluster)
#H.4
byCluster <- service %>%
filter(STATUS == "OPEN") %>%
group_by(NEIGHBORHOODCLUSTERS) %>%
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE)) %>%
arrange(desc(counts))
View(byCluster)
#H.5
byCluster <- service %>%
group_by(QUADRANT, WARD) %>%
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE)) %>%
arrange(desc(counts))
#H.4
byCluster <- service %>%
filter(STATUS == "OPEN") %>%
group_by(NEIGHBORHOODCLUSTERS) %>%
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE)) %>%
arrange(desc(counts))
#H.5
byQuadWard <- service %>%
group_by(QUADRANT, WARD) %>%
summarise(counts = n(),
meanDays = mean(DAYSTOCLOSE)) %>%
arrange(desc(counts))
View(byQuadWard)
tidy_country
data(tidy_country)
load("tidyr_tables.RData")
library(tm)
library(readxl)
library(rvest)
library(scrapeR)
library(jsonlite)
library(httr)
library(tidyverse)
setwd("C:/Users/P6BQ/Desktop/capstone.arthur.pignotti") #local location of github repo
########################
# Load Text Extract    #
########################
attachExtract <- "Data/CMS-2017-0163-TExtract.xlsx"
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
View(attachExtract)
setwd("C:/Users/P6BQ/Desktop/DSCoLab-Spring-2018-Cohort-Material/data")
colnames(attachExtract) <- make.names(colnames(attachExtract))
View(attachExtract)
attachExtract <- attachExtract %>%
transmute(Comment.ID = Document.ID) %>%
separate(File.Name,
into = c("Document.ID", "ext"),
sep = ".")
View(attachExtract)
attachExtract <- attachExtract %>%
transmute(Comment.ID = Document.ID) %>%
separate('File.Name',
into = c("Document.ID", "ext"),
sep = ".")
attachExtract <- attachExtract %>%
transmute(Comment.ID = Document.ID) %>%
separate(`File.Name`,
into = c("Document.ID", "ext"),
sep = ".")
?separate
attachExtract <- attachExtract %>%
transmute(Comment.ID = Document.ID)
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
separate(File.Name,
into = c("Document.ID", "ext"),
sep = ".")
select(-c(Document.ID) %>%
attachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
select(-Document.ID) %>%
separate(File.Name,
into = c("Document.ID", "ext"),
sep = ".")
attachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
select(-Document.ID)
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
View(attachExtract)
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
setwd("C:/Users/P6BQ/Desktop/capstone.arthur.pignotti") #local location of github repo
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
select(-Document.ID) %>%
separate(File.Name,
into = c("Document.ID", "ext"),
sep = ".")
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
select(-Document.ID)
View(attachExtract)
attachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[A-Za-z0-9]{20,21}."))
ttachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
select(-Document.ID)
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = Document.ID) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[A-Za-z0-9]{20,21}."))
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID)
########################
# Load Text Extract    #
########################
attachExtract <- read_excel("Data/CMS-2017-0163-TExtract.xlsx")
colnames(attachExtract) <- make.names(colnames(attachExtract))
attachExtract <- attachExtract %>%
select(-Document.ID) %>%
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr(".", File.Name) - 1))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr(".", File.Name) - 1))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("//.", File.Name) - 1))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("/.", File.Name) - 1))
View(byPriority)
attachExtract$test <- regexpr("/.", attachExtract$File.Name)
attachExtract$test <- regexpr(".", attachExtract$File.Name)
attachExtract$test <- regexpr(".doc", attachExtract$File.Name)
attachExtract$test <- regexpr(".{a-zA-Z}", attachExtract$File.Name)
attachExtract$test <- regexpr(".[a-zA-Z]", attachExtract$File.Name)
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[a-zA-Z0-9]{23}?=\\."))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[a-zA-Z0-9]?=\\."))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[a-zA-Z0]?=\\."))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[a-zA-Z0-9](?=\\.)"))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[a-zA-Z0-9]{23}(?=\\.)"))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[:alnum:]{20,23}(?=\\.)"))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = str_extract(File.Name, "[:alnum:]{20,23}"))
attachExtract <- attachExtract %>%
mutate(Comment.ID = substr(File.Name,1,18)) %>%
select(-Document.ID) %>%
mutate(Document.ID = substr(File.Name, 1, regexpr("\\.", File.Name) - 1))
comLoc <- "C:/Data/Comments/CMS-2017-0163/FDMS"
comReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = "Nonrulemaking-Public Submission")
comReport$Site_Key <- substring(comReport$`Email Address`, regexpr("@", comReport$`Email Address`) + 1)
attReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = "Attachments")
colnames(comReport) <- make.names(colnames(comReport))
comReport$Site_Key <- substring(comReport$Email.Address, regexpr("@", comReport$Email.Address) + 1)
attReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = "Attachments")
colnames(attReport) <- make.names(colnames(attReport))
View(comReport)
##########################
# Create Corpus Using TM #
##########################
mycorpus = Corpus(VectorSource(comments$commentText))
#####################
# API Data Call     #
#####################
api_key = "bbPnmY2FqvoazRuHseN0liEsWh0qI255CgJTsPAo"
#API call to get the number of record calls needs. API limits pull to 1000 records
countUrl = paste0("https://api.data.gov:443/regulations/v3/documents.json?api_key=",api_key,"&countsOnly=1&encoded=1&dct=PS&dktid=", dktid)
recCount <- fromJSON(countUrl)
pageCount <- ceiling(recCount$totalNumRecords/100)
for (i in 1:pageCount){
pageUrl = paste0("https://api.data.gov:443/regulations/v3/documents.json?api_key=", api_key, "&rpp=100&dct=PS&encoded=1&dktid=", dktid, "&po=", (i-1)*100)
dataPull <- fromJSON(pageUrl)
if (i==1){
comments <- data.frame(dataPull$documents)
} else {
tmp <- data.frame(dataPull$documents)
comments <- rbind(comments, tmp)
}
}
write.csv(comments, file = "Data\comments.csv")
#API call to get the number of record calls needs. API limits pull to 1000 records
countUrl = paste0("https://api.data.gov:443/regulations/v3/documents.json?api_key=",api_key,"&countsOnly=1&encoded=1&dct=PS&dktid=", dktid)
dktid = "CMS-2017-0163"
api_key = "bbPnmY2FqvoazRuHseN0liEsWh0qI255CgJTsPAo"
#API call to get the number of record calls needs. API limits pull to 1000 records
countUrl = paste0("https://api.data.gov:443/regulations/v3/documents.json?api_key=",api_key,"&countsOnly=1&encoded=1&dct=PS&dktid=", dktid)
recCount <- fromJSON(countUrl)
pageCount <- ceiling(recCount$totalNumRecords/100)
for (i in 1:pageCount){
pageUrl = paste0("https://api.data.gov:443/regulations/v3/documents.json?api_key=", api_key, "&rpp=100&dct=PS&encoded=1&dktid=", dktid, "&po=", (i-1)*100)
dataPull <- fromJSON(pageUrl)
if (i==1){
comments <- data.frame(dataPull$documents)
} else {
tmp <- data.frame(dataPull$documents)
comments <- rbind(comments, tmp)
}
}
write.csv(comments, file = "Data\comments.csv")
write.csv(comments, file = "Data/comments.csv")
########################
# Load Text Extract    #
########################
comments <- read_csv("Data/comments.csv")
View(comments)
library(dplyr)
library(stringr)
library(ggplot2)
data(stop_words)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
test1 <- test %>%
unnest_tokens(word, text)
test1 <- test1 %>%
anti_join(stop_words)
test1 %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
data(stop_words)
#libraries
library(tm)
library(readxl)
library(tidyverse)
##########################
# Create Corpus Using TM #
##########################
mycorpus = Corpus(VectorSource(comments$commentText))
library(dplyr)
library(stringr)
library(ggplot2)
data(stop_words)
library(tidytext)
data(stop_words)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
data(stop_words)
commentsDf <- data.frame(paste(comments$documentId,"-0",sep=""), comments$commentText, stringsAsFactors = FALSE)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
View(commentsDf)
View(comments)
commentsDf <- data.frame(doc_id = paste0(comments$documentId,"-0"), comments$commentText, stringsAsFactors = FALSE)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
test1 <- test %>%
unnest_tokens(word, text)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
View(test)
test1 <- test %>%
unnest_tokens(word, text)
test1 <- test1 %>%
anti_join(stop_words)
commentsDf <- data.frame(doc_id = paste0(comments$documentId,"-0"), text comments$commentText, stringsAsFactors = FALSE)
commentsDf <- data.frame(doc_id = paste0(comments$documentId,"-0"), text = comments$commentText, stringsAsFactors = FALSE)
test <- commentsDf %>%
group_by(doc_id) %>%
mutate(linenumber = row_number()) %>%
ungroup()
test1 <- test %>%
unnest_tokens(word, text)
test1 <- test1 %>%
anti_join(stop_words)
test1 %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
