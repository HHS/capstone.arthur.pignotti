.libPaths( c( .libPaths(), "~/userLibrary") )
.libPaths( c( .libPaths(), "C:/R/Packages") )
.libPaths
.libPaths()
install.packages("dplyr", lib="C:/R/Packages")
.libPaths()
.libPaths( c("C:/R/Packages", .libPaths()) )
install.packages("ggplot")
install.packages("ggplot", lib="C:/R/Packages")
install.packages("ggplot2")
install.packages("caret")
install.packages("sqldf")
install.packages("devtools")
install.packages("jsonlite")
install.packages("pdftools")
library(pdftools)
library("pdftools", lib.loc="C:/R/Packages")
library("ggplot2", lib.loc="C:/R/Packages")
library("codetools", lib.loc="C:/Program Files/R/R-3.3.3/library")
library("colorspace", lib.loc="C:/R/Packages")
library("crayon", lib.loc="C:/R/Packages")
.libPaths()
install.packages("ggplot2")
library(ggplot2)
install.packages("Rcpp")
install.packages("Rcpp")
library(ggplot2)
library("pdftools", lib.loc="C:/R/Packages")
nvsr65_05 <- pdf_text("http://www.cdc.gov/nchs/data/nvsr/nvsr65/nvsr65_05.pdf")
nvsr65_05 <- pdf_text("http://www.cdc.gov/nchs/data/nvsr/nvsr65/nvsr65_05.pdf")
head(strsplit(nvsr65_05[ [  1 ] ], "\n")[ [ 1 ] ])
head(strsplit(nvsr65_05[ [  1 ] ], "\n")[ [ 1 ] ])
head(strsplit(nvsr65_05[[1]], "\n")[[1]])
install.packages("tesseract")
library(tesseract)
eng <- tesseract("eng")
text <- tesseract::ocr("http://jeroen.github.io/images/testocr.png", engine = eng)
text <- tesseract::ocr("http://www.cdc.gov/nchs/data/nvsr/nvsr65/nvsr65_05.pdf", engine = eng)
text <- tesseract::ocr("C:/Data/Comments/CMS-2017-0163/Attachments/CMS-2017-0163-DRAFT-0411-A1.pdf", engine = eng)
results <- tesseract::ocr_data("C:/Data/Comments/CMS-2017-0163/Attachments/CMS-2017-0163-DRAFT-0411-A1.pdf", engine = eng)
print(text, n = 20)
print(results, n = 20)
View(results)
head(results.confidence)
summary(results$confidence)
.libPaths( c("C:/R/Packages", .libPaths()) )
install.packages("shiny", lib="C:/R/Packages")
install.packages("yhat", lib="C:/R/Packages")
install.packages("stringr", lib="C:/R/Packages")
install.packages("forecast", lib="C:/R/Packages")
install.packages("randomForest", lib="C:/R/Packages")
install.packages("reshape2", lib="C:/R/Packages")
install.packages("lubridate", lib="C:/R/Packages")
install.packages("data.table", lib="C:/R/Packages")
install.packages("googleVis", lib="C:/R/Packages")
install.packages("caret", lib="C:/R/Packages")
install.packages("car", lib="C:/R/Packages")
install.packages("tm", lib="C:/R/Packages")
install.packages("twitteR", lib="C:/R/Packages")
install.packages("gbm", lib="C:/R/Packages")
install.packages("e1071", lib="C:/R/Packages")
install.packages("glmnet", lib="C:/R/Packages")
install.packages("tau", lib="C:/R/Packages")
install.packages("knitr", lib="C:/R/Packages")
install.packages("NLP", lib="C:/R/Packages")
.libPaths( c("C:/R/Packages", .libPaths()) )
.libPaths( c("C:/R/Packages", .libPaths()) )
library(tidyverse)
########################
# Load FDMS Reports    #
########################
comLoc <- "C:/Data/Comments/CMS-2017-0163/FDMS/files"
########################
# Load FDMS Reports    #
########################
library(readxl)
comReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = "Nonrulemaking-Public Submission")
comLoc <- "C:/Data/Comments/CMS-2017-0163/FDMS"
comReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = "Nonrulemaking-Public Submission")
View(comReport)
warnings()
unique(comReport)
count(comReport)
test <- unique(comReport)
View(test)
test <- count(comReport)
View(test)
test <- unique(comReport$Attachments)
comLoc <- "C:/Data/Comments/CMS-2017-0163/FDMS"
comReport <- read_excel(paste(comLoc, "/report.xlsx", sep=""), sheet = "Nonrulemaking-Public Submission")
View(comReport)
str(comReport)
test <- unique(comReport$`Organization Name`)
comReport$Site_Key <- substring(comReport$`Email Address`, regexpr("@", comReport$`Email Address`) + 1)
View(comReport)
########################
# Testing              #
########################
url <- paste('http://www.', siteDf[1, 'Site_Key'], sep='')
comReport$Site_Key <- substring(comReport$`Email Address`, regexpr("@", comReport$`Email Address`) + 1)
########################
# Getting Info         #
########################
pubSites <- c(NA,
"aim.com",
"aol.com",
"google.com",
"gmail.com",
'comcast.com',
'cox.net',
"cox.com",
'hotmail.com',
'icloud.com',
'yahoo.com',
'mail.com',
'att.net',
'bellsouth.net',
'charter.net',
'comcast.net',
"msn.com",
'gmail.co',
'outlook.com',
'verizon.net',
'ymail.com',
'aeneas.net')
siteDf <- subset(comReport, !(tolower(Site_Key) %in% pubSites))["Site_Key"]
siteDf <- distinct(siteDf)
siteDf <- subset(comReport, !(tolower(Site_Key) %in% pubSites))[c("Site_Key","Organization Name"]
siteDf <- subset(comReport, !(tolower(Site_Key) %in% pubSites))[c("Site_Key","Organization Name")]
View(siteDf)
siteDf <- distinct(siteDf)
########################
# Load FDMS Reports    #
########################
library(tidyverse)
.libPaths( c("C:/R/Packages", .libPaths()) )
########################
# Load FDMS Reports    #
########################
library(tidyverse)
siteDf <- distinct(siteDf)
########################
# Web Scraping         #
########################
library(rvest)
########################
# Testing              #
########################
url <- paste('http://www.', siteDf[1, 'Site_Key'], sep='')
webpage %>%
html_node("body") %>%
html_text()
webpage <- read_html(url)
webpage %>%
html_node("body") %>%
html_text()
url
########################
# Testing              #
########################
url <- paste('http://www.', siteDf[5, 'Site_Key'], sep='')
webpage <- read_html(url)
webpage %>%
html_node("body") %>%
html_text()
url
for (i in 1:nrow(siteDf)){
url <- paste('http://www.', siteDf[i, 'Site_Key'], sep='')
test <- HEAD(url)
if (test$status_code==200){
webpage <- read_html(url)
siteDf[i, 'htitle'] <- webpage %>%
html_node("title") %>%
html_text()}
}
library(httr)
for (i in 1:nrow(siteDf)){
url <- paste('http://www.', siteDf[i, 'Site_Key'], sep='')
test <- HEAD(url)
if (test$status_code==200){
webpage <- read_html(url)
siteDf[i, 'htitle'] <- webpage %>%
html_node("title") %>%
html_text()}
}
########################
# Getting Info         #
########################
pubSites <- c(NA,
"aim.com",
"aol.com",
"google.com",
"gmail.com",
'comcast.com',
'cox.net',
"cox.com",
'hotmail.com',
'icloud.com',
'yahoo.com',
'mail.com',
'att.net',
'bellsouth.net',
'charter.net',
'comcast.net',
"msn.com",
'gmail.co',
'outlook.com',
'verizon.net',
'ymail.com',
'me.com',
'aeneas.net')
siteDf <- subset(comReport, !(tolower(Site_Key) %in% pubSites))[c("Site_Key","Organization Name")]
siteDf <- distinct(siteDf)
for (i in 1:nrow(siteDf)){
url <- paste('http://www.', siteDf[i, 'Site_Key'], sep='')
test <- HEAD(url)
if (test$status_code==200){
webpage <- read_html(url)
siteDf[i, 'htitle'] <- webpage %>%
html_node("title") %>%
html_text()}
}
test <- HEAD(url)
test <- http_error(url)
test <- url_success(url)
test <- !http_error(url)
.libPaths( c("C:/R/Packages", .libPaths()) )
library(tid)
library(tidyverse)
tidyverse_update()
install.packages(c("dplyr", "purrr", "rlang", "tidyr"))
install.packages(c("dplyr", "purrr", "rlang", "tidyr"))
.libPaths( c("C:/R/Packages", .libPaths()) )
install.packages("stm", lib="C:/R/Packages")
install.packages("quanteda", lib="C:/R/Packages")
#### Initial Setup ####
.libPaths( c("C:/R/Packages", .libPaths()) ) #add extra library location
setwd("C:/Users/P6BQ/Desktop/capstone.arthur.pignotti") #local location of github repo
source("helper_functions.R")
#Load libraries
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
library(tidyverse)
library(SnowballC)
library(tm)
library(topicmodels)
library(quanteda)
#Load comment data
commentsDf <- read.csv("Data/commentsDf.csv", stringsAsFactors = FALSE)
bigram.list <- read.csv("Data/bigram_list2.csv", stringsAsFactors = FALSE)
#### Create Corpus Using Tidy ####
#Load stop words
data(stop_words)
#Load CMS-specific stop words
cms_stop <- read_csv("Data/cms_stop_words.csv")
# Remove non-alpha-numeric characters
commentsDf$Text <- gsub("[^A-z0-9 ]", "", commentsDf$Text)
commentsDf <- mutate(commentsDf, Text = str_replace_all(Text, "-", " ")) %>%
commentsDf <- mutate(commentsDf, Text = str_replace_all(Text, "-", " "))
bigram.index <- commentsDf %>%
unnest_tokens(bigram, Text, token = "ngrams", n = 2) %>%
rowid_to_column("index") %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
mutate(word1 = wordStem(word1),
word2 = wordStem(word2))
bigram.last.row <- bigram.index %>%
group_by(Paragraph.Number) %>%
filter(row_number() == n()) %>%
ungroup() %>%
mutate(word = word2, index = index + 1) %>%
filter(!is.na(word)) %>%
select(-c(word1, word2))
bigram.index <- bigram.index %>%
union_all(bigram.last.row) %>%
unite(word, word1, word2, sep = " ") %>%
arrange(Paragraph.Number, index) %>%
rowid_to_column("index1") %>%
select(-index) %>%
inner_join(bigram.list, by = c("word" = "word")) %>%
mutate(index2 = index1 + 1, index = index1)
comment.words <- commentsDf %>%
unnest_tokens(word, Text) %>%
rowid_to_column("index") %>%
filter(!(str_detect(word, regex("^http"))),
!(str_detect(word, regex("^www")))) %>%
anti_join(stop_words) %>%
anti_join(cms_stop) %>%
anti_join(bigram.index, by = c("index" = "index1")) %>%
anti_join(bigram.index, by = c("index" = "index2")) %>%
mutate(word = wordStem(word)) %>%
select(-index)
comments <- union(comment.words, bigram.index)
bigram.index <- commentsDf %>%
unnest_tokens(bigram, Text, token = "ngrams", n = 2) %>%
rowid_to_column("index") %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
mutate(word1 = wordStem(word1),
word2 = wordStem(word2))
View(bigram.index)
bigram.last.row <- bigram.index %>%
group_by(Document.ID, Page.Number) %>%
filter(row_number() == n()) %>%
ungroup() %>%
mutate(word = word2, index = index + 1) %>%
filter(!is.na(word)) %>%
select(-c(word1, word2))
View(bigram.last.row)
View(bigram.index)
bigram.index <- commentsDf %>%
unnest_tokens(bigram, Text, token = "ngrams", n = 2) %>%
rowid_to_column("index") %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
mutate(word1 = wordStem(word1),
word2 = wordStem(word2))
bigram.last.row <- bigram.index %>%
group_by(Document.ID, Page.Number) %>%
filter(row_number() == n()) %>%
ungroup() %>%
mutate(word = word2, index = index + 1) %>%
filter(!is.na(word)) %>%
select(-c(word1, word2))
bigram.index <- bigram.index %>%
union_all(bigram.last.row) %>%
unite(word, word1, word2, sep = " ") %>%
arrange(Paragraph.Number, index) %>%
rowid_to_column("index1") %>%
select(-index) %>%
inner_join(bigram.list, by = c("word" = "word")) %>%
mutate(index2 = index1 + 1, index = index1)
comment.words <- commentsDf %>%
unnest_tokens(word, Text) %>%
rowid_to_column("index") %>%
filter(!(str_detect(word, regex("^http"))),
!(str_detect(word, regex("^www")))) %>%
anti_join(stop_words) %>%
anti_join(cms_stop) %>%
anti_join(bigram.index, by = c("index" = "index1")) %>%
anti_join(bigram.index, by = c("index" = "index2")) %>%
mutate(word = wordStem(word)) %>%
select(-index)
comments <- union(comment.words, bigram.index)
bigram.index <- bigram.index %>%
union_all(bigram.last.row) %>%
unite(word, word1, word2, sep = " ") %>%
arrange(Document.ID, Page.Number, index) %>%
rowid_to_column("index1") %>%
select(-index) %>%
inner_join(bigram.list, by = c("word" = "word")) %>%
mutate(index2 = index1 + 1, index = index1)
comment.words <- commentsDf %>%
unnest_tokens(word, Text) %>%
rowid_to_column("index") %>%
filter(!(str_detect(word, regex("^http"))),
!(str_detect(word, regex("^www")))) %>%
anti_join(stop_words) %>%
anti_join(cms_stop) %>%
anti_join(bigram.index, by = c("index" = "index1")) %>%
anti_join(bigram.index, by = c("index" = "index2")) %>%
mutate(word = wordStem(word)) %>%
select(-index)
comments <- union(comment.words, bigram.index)
comments <- union_all(comment.words, bigram.index)
View(comments)
comments <- union_all(comment.words, bigram.index) %>%
select(-c(index1, index2))
View(comments)
comment.words <- commentsDf %>%
unnest_tokens(word, Text) %>%
rowid_to_column("index") %>%
filter(!(str_detect(word, regex("^http"))),
!(str_detect(word, regex("^www")))) %>%
anti_join(stop_words) %>%
anti_join(cms_stop) %>%
anti_join(bigram.index, by = c("index" = "index1")) %>%
anti_join(bigram.index, by = c("index" = "index2")) %>%
mutate(word = wordStem(word))
comments <- union_all(comment.words, bigram.index) %>%
select(-c(index1, index2))
View(comments)
